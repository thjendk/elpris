import { isSameHour } from "date-fns";
import Head from "next/head";
import { useState } from "react";
import { round } from "lodash";

const Home = ({ price }: { price: number }) => {
  const [petrol, setPetrol] = useState(14.5);
  const [batterySize, setBatterySize] = useState(10);
  const [electricDistance, setElectricDistance] = useState(30);
  const kmkwh = electricDistance / batterySize;
  const [liter, setLiter] = useState(11.6);
  const electricPrice = round(price / kmkwh, 2);
  const petrolPrice = round(petrol / liter, 2);
  const shouldCharge = electricPrice <= petrolPrice;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        style={{
          display: "flex",
          flexDirection: "column",
          minHeight: "100vh",
          flexGrow: 1,
          alignItems: "center",
          justifyContent: "center",
          maxWidth: "50em",
          margin: "auto",
        }}
      >
        <div>
          <p>Spotpris: {price.toFixed(2)} kr/kwh</p>
        </div>
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            width: "100%",
          }}
        >
          <label>Benzinpris</label>
          <input
            type="number"
            value={petrol}
            onChange={(e) => setPetrol(e.target.valueAsNumber)}
          />
          <label>Km/Liter</label>
          <input
            type="number"
            value={liter}
            onChange={(e) => setLiter(e.target.valueAsNumber)}
          />

          <label>Battery size</label>
          <input
            type="number"
            value={batterySize}
            onChange={(e) => setBatterySize(e.target.valueAsNumber)}
          />
          <label>Electric distance</label>
          <input
            type="number"
            value={electricDistance}
            onChange={(e) => setElectricDistance(e.target.valueAsNumber)}
          />
          <p
            style={{
              textAlign: "center",
              marginTop: "0.5em",
              marginBottom: "0.5em",
            }}
          >
            Km/Kwh: {round(kmkwh)}
          </p>
        </div>
        <div style={{ width: "100%", textAlign: "center" }}>
          {shouldCharge ? (
            <p
              style={{
                backgroundColor: "green",
                color: "white",
                padding: "0.5em",
                fontWeight: "bold",
              }}
            >
              Charge!
            </p>
          ) : (
            <p
              style={{
                backgroundColor: "red",
                color: "white",
                padding: "0.5em",
                fontWeight: "bold",
              }}
            >
              Do not charge!
            </p>
          )}
        </div>
        <div
          style={{ textAlign: "center", marginTop: "1em", marginBottom: "1em" }}
        >
          <p>Elpris: {electricPrice}</p>
          <p>Benzinpris: {petrolPrice}</p>
        </div>
      </main>
    </div>
  );
};

export default Home;

export const getServerSideProps = async () => {
  const data = await fetch(
    "https://api.energidataservice.dk/datastore_search?resource_id=elspotprices&sort=HourDK%20desc&filters={%22PriceArea%22:%22DK1%22}"
  ).then((res) => res.json());
  const prices = data.result.records.map((r: any) => ({
    ...r,
    time: new Date(r.HourUTC),
    price: (r.SpotPriceDKK / 1000) * 100,
  }));
  const today = prices.find((p: any) => isSameHour(p.time, new Date()));

  return {
    props: {
      price: round((today.price / 100) * 2, 2),
    },
  };
};
